#! /usr/bin/env bash

set -eu -o pipefail

exit_trap()
{
  local lc="$BASH_COMMAND" rc=$?
  test $rc -eq 0 || echo "*** error $rc: $lc"
}

trap exit_trap EXIT

cd "$(dirname "$0")"
cabal2nix=$(git describe --dirty)

cd nixpkgs
git reset -q --hard
git clean -dxf -q
git pull -q
export NIX_PATH=nixpkgs=$PWD
cd ..

cd hackage
git pull -q
rm -f preferred-versions
for n in */preferred-versions; do
  cat >>preferred-versions "$n"
  echo >>preferred-versions
done
hackage=$(git rev-parse --verify HEAD)
cd ..

# This command needs a recent development version of cabal-install. I don't
# think this works properly in version 2.0.0.0 already.
cabal -v0 new-run hackage2nix -- --nixpkgs="$PWD/nixpkgs" +RTS -M4G -RTS
cabal -v0 new-run cabal2nix "https://github.com/NixOS/cabal2nix/archive/$cabal2nix.tar.gz" | sed -e 's/version = ".*"/version = "'"$(git log -1 --date=short --format=%cd)"'"/' > nixpkgs/pkgs/development/haskell-modules/cabal2nix-latest

cd nixpkgs
nix-prefetch-github commercialhaskell all-cabal-hashes --rev "$hackage" > nixpkgs/pkgs/data/misc/hackage/pin.json
git add pkgs/data/misc/hackage
git add pkgs/development/haskell-modules
if [ -n "$(git status --porcelain)" ]; then
  cat <<EOF | git commit -n -q -F -
hackage-packages.nix: automatic Haskell package set update

This update was generated by hackage2nix $cabal2nix from Hackage revision
https://github.com/commercialhaskell/all-cabal-hashes/commit/$hackage.
EOF
  git push -q
fi
